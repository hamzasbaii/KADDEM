pipeline{
    agent any
    stages {
        stage("Testing Maven"){
            steps {
                sh "mvn -version"
            }
        }
        stage("Testing JDK"){
            steps {
                sh "java -version"
            }
        }
        stage("Chekout Git"){
            steps {
                echo "Pulling"
            }
        }
        stage('MVN COMPILE') {
            steps{
                sh 'mvn compile'
        }
}

stage('MVN SONARQUBE') {
            steps{

                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
            }
        }
      stage('MVN Nexus') {
            steps{
                sh 'mvn deploy -Dmaven.test.skip=true'
        }
}
stage('Docker Image ') {
            steps{
                sh 'docker build -t hamzasbaii/devops-project-2.1 .'
        }
}
    stage('Docker HUB') {
            steps{
                sh 'docker login -u hamzasbaii -p Hamza060200'
                sh 'docker push hamzasbaii/devops-project-2.1'
        }
}
   stage('Run Docker Compose') {
steps {
             sh "docker-compose build"
              sh "docker-compose up -d"
}
}

    }
}


/*
stage('Test Services with Swagger') {
steps {
echo "Testing services with Swagger"

// Exemple de test d'ajout d'abonnement
//sh 'curl -X POST -H "Content-Type: application/json" -d \'{"startDate":"2023-01-01", "typeSub":"ANNUAL"}\' http://192.168.1.3:8089/api/subscription/add
'

// Exemple de test de récupération d'un abonnement par ID

sh 'curl http://192.168.1.3:8089/api/subscription/get/1
'
}
}


stage('Monitoring with Prometheus and Grafana') {
steps {
echo "Monitoring with Prometheus and Grafana"
// Add commands to set up monitoring using Prometheus and Grafana
}
}
}

post {
always {
echo "Cleaning up"
// Add cleanup steps if needed
}
}
}
*/
